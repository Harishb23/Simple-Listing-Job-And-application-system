import React, { useState, useEffect } from "react";
import axios from "axios";
import "./App.css";
const API_URL = "http://localhost:5000"; // Backend URL


const App = () => {
    const [jobs, setJobs] = useState([]);
    const [formData, setFormData] = useState({ name: "", email: "", resume: null });
    const [message, setMessage] = useState("");

    // Fetch jobs from backend
    useEffect(() => {
        axios.get(`${API_URL}/jobs`)
            .then(res => setJobs(res.data))
            .catch(err => console.error("Error fetching jobs:", err));
    }, []);

    // Handle input change
    const handleChange = (e) => {
        if (e.target.name === "resume") {
            setFormData({ ...formData, resume: e.target.files[0] });
        } else {
            setFormData({ ...formData, [e.target.name]: e.target.value });
        }
    };

    // Submit form
    const handleSubmit = async (e) => {
        e.preventDefault();
        
        const formDataObj = new FormData();
        formDataObj.append("name", formData.name);
        formDataObj.append("email", formData.email);
        formDataObj.append("resume", formData.resume);
    
        console.log("üì© Submitting Application:", {
            name: formData.name,
            email: formData.email,
            resume: formData.resume ? formData.resume.name : "No file selected"
        });
    
        try {
            const res = await axios.post(`${API_URL}/apply`, formDataObj, {
                headers: { "Content-Type": "multipart/form-data" }
            });
            setMessage(res.data.message);
            console.log("‚úÖ Response from server:", res.data);
        } catch (err) {
            console.error("‚ùå Error submitting application:", err);
            setMessage("Error submitting application.");
        }
    };
    

    return (
        <div style={{ padding: "20px" }}>
            <h1>Job Listings</h1>
            <ul>
    {jobs.map((job, index) => (
        <li key={index}>
            <h3>{job.title}</h3>
            <p>{job.description}</p> {/* Display the job description correctly */}
        </li>
    ))}
</ul>

            <h2>Apply for a Job</h2>
            {message && <p>{message}</p>}
            <form onSubmit={handleSubmit}>
                <input type="text" name="name" placeholder="Name" onChange={handleChange} required />
                <input type="email" name="email" placeholder="Email" onChange={handleChange} required />
                <input type="file" name="resume" accept=".pdf,.doc" onChange={handleChange} required />
                <button type="submit">Apply</button>
            </form>
        </div>
    );
};

export default App;
